// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4946.AlphaDogs2015Robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4946.AlphaDogs2015Robot.Robot;

/**
 *
 */
public class  DriveWithJoystickArcade extends Command {

    public DriveWithJoystickArcade() {
        // Use requires() here to declare subsystem dependencies
        requires(Robot.m_driveTrain);

    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double Yval = Robot.m_oi.getDriveJoystick().getY();
    	double Xval = Robot.m_oi.getDriveJoystick().getX();
    	
    	
    	// square inputs to add sensitivity near middle of Joystick.
    	
    	
    	if (Yval >= 0) {
    		Yval = Yval * Yval;
    	} else {
    		Yval = -Yval * Yval;  // if movement is backwards, make sure to keep it backwards (squaring removes negatives)
    	}
    	
    	
    	if (Xval >= 0) {
    		Xval = Xval * Xval;
    	} else {
    		Xval = -Xval * Xval;  //same
    	}    	
    	
    	
        Robot.m_driveTrain.drive(Yval, -Xval);
        
        
        //Robot.m_driveTrain.drive(Robot.m_oi.getDriveJoystick());
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false; //Runs until interrupted
    }

    // Called once after isFinished returns true
    protected void end() {
        Robot.m_driveTrain.drive(0, 0); //Stop driving
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
